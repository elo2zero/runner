name: Check and deploy
on:
  pull_request:
    branches: [main]
jobs:
  check-r-verse-devel:
    runs-on: ubuntu-18.04
    container: rocker/verse:latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install dependencies
        shell: Rscript {0}
        run: |
          remotes::install_deps(dependencies = TRUE)
      - name: Check
        shell: Rscript {0}
        run: |
          devtools::check()

  check-r-verse-3-6:
    runs-on: ubuntu-18.04
    container: rocker/verse:3.6.3
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          remotes::install_deps(dependencies = TRUE)
        shell: Rscript {0}
      - name: Check
        run: |
          devtools::check()
        shell: Rscript {0}

  # r-hub-checks:
  #   needs: check-r-verse-devel
  #   runs-on: ubuntu-18.04
  #   container: rocker/tidyverse:latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2
  #     - name: Initialize r-hub
  #       shell: Rscript {0}
  #       run: |
  #         install.packages("rhub")
  #         rhub::validate_email(
  #           email = "dawid.kaledkowski@gmail.com",
  #           token = "${{secrets.RHUB_TOKEN}}"
  #         )
  #     - name: Check r-hub
  #       shell: Rscript {0}
  #       run: |
  #         devtools::check_rhub(
  #           pkg = ".",
  #           platforms = c(
  #             "solaris-x86-patched",
  #             "debian-gcc-release",
  #             "debian-clang-devel",
  #             "fedora-gcc-devel"
  #           ),
  #           build_args = "--no-build-vignettes",
  #           interactive = FALSE
  #         )

  build-and-deploy:
    needs: check-r-verse-devel
    #  if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    container: rocker/tidyverse:latest
    steps:
      - name: Set env
        run: |
          PKGNAME=$(sed -n "s/Package: *\([^ ]*\)/\1/p" DESCRIPTION)
          PKGVERS=$(sed -n "s/Version: *\([^ ]*\)/\1/p" DESCRIPTION)
          PKGNEWS=$(sed -n '2,/^$/p' NEWS.md)
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v2.3.1
        with:
          persist-credentials: false

      - name: Install package
        run: R CMD INSTALL .

      - name: Build docs üîß
        shell: Rscript {0}
        run: |
          install.packages("pkgdown")
          pkgdown::build_site()

      - name: Test coverage
        shell: Rscript {0}
        run: |
          install.packages("covr")
          covr::codecov()

      - name: Deploy Docs üöÄ
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GH_TOKEN }}
          publish_dir: docs

      - name: GH Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: "v${{ env.PKGVERS }}"
          release_name: "${{ env.PKGNAME }} ${{ env.PKGVERS }}"
          body: "${{ env.PKGNEWS }}"
          draft: false
          prerelease: false

      # - name: Release CRAN
      #   shell: Rscript {0}
      #   run: |
      #     devtools::release(pkg = ".", check = FALSE, args = NULL)
